/**********************************************************************
 *
 *   Component hook generated by Quest
 *
 *   Code Logic for the component goes in this hook
 *   To setup bindings that use the data here or call the functions here, use the Quest editor
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';

type EntityType = {
  value: string;
  text: string;
}

type TaxIdType = {
  value: string;
  text: string;
}

type ForeignInvestorType = {
  value: string;
  text: string;
}

type AccreditationType = {
  value: string;
  text: string;
}

type FormEntityProps = {
  className?: string;
}

type FormEntityData = {
  entityTypes: EntityType[];
  taxIdType: TaxIdType[];
  foreignInvestorType: ForeignInvestorType[];
  accreditationTypes: AccreditationType[];
}

const useFormEntity = () => {
  const getEntityTitle = (): any => {};
  let data: FormEntityData = {
    entityTypes: [
      { value: 'entityType1', text: 'Entity Type 1' },
      { value: 'entityType2', text: 'Entity Type 2' },
      { value: 'entityType3', text: 'Entity Type 3' }
    ],
    taxIdType: [
      { value: 'taxIdType1', text: 'Tax ID Type 1' },
      { value: 'taxIdType2', text: 'Tax ID Type 2' },
      { value: 'taxIdType3', text: 'Tax ID Type 3' }
    ],
    foreignInvestorType: [
      { value: 'foreignInvextorType1', text: 'Foreign Investor Type 1' },
      { value: 'foreignInvextorType2', text: 'Foreign Investor Type 2' },
      { value: 'foreignInvextorType3', text: 'Foreign Investor Type 3' }
    ],
    accreditationTypes: [
      { value: 'accreditationType1', text: 'Accredition Type 1' },
      { value: 'accreditationType2', text: 'Accredition Type 2' },
      { value: 'accreditationType3', text: 'Accredition Type 3' }
    ]
  };

  const getEntity = (): any => {
    return "Entity";
  };

  const getButtonLabel = (): any => {
    return "Button";
  };

  let fns: any = { getEntity, getButtonLabel,getEntityTitle};
  return { data, fns };
};

export default useFormEntity;